[versions]
# Android
androidxTestExtJunit = "1.2.1"
agp = "8.4.0-alpha13"

# Kotlin
kotlin = "2.2.0"
ksp = "2.0.0-1.0.21"
kotlinxCoroutines = "1.10.2"
kotlinxSerializationJson = "1.9.0"
kotlinxDatetime = "0.7.1-0.6.x-compat"

# Google
hilt = "2.57"
hiltNavigationCompose = "1.2.0"
hiltWork = "1.2.0"
googleServices = "4.4.3"
firebaseCrashlyticsPlugin = "3.0.4"
firebasePerfPlugin = "1.4.2"
openapiGeneratorPlugin = "7.14.0"
desugar-jdk-libs = "2.1.5"

# Testing
espressoCore = "3.6.1"
junit = "5.13.3"

# AndroidX
composeBom = "2025.07.00"
activityCompose = "1.10.1"
navigationCompose = "2.9.2"
coreKtx = "1.16.0"
appcompat = "1.7.1"
lifecycle = "2.9.2"
room = "2.7.2"
workManager = "2.10.2"
datastore = "1.1.7"
securityCrypto = "1.1.0-beta01"

# Firebase
firebaseBom = "33.16.0"

# Network
retrofit = "3.0.0"
retrofitKotlinxSerializationConverter = "1.0.0"
okhttp = "5.1.0"

# UI
coilCompose = "2.7.0"
timber = "5.0.1"
material3 = "1.3.2"
material = "1.12.0"
composeCompiler = "1.5.3"

# Oracle
oracleStorage = "1.5.0"
oracleCore = "2.0.0"
oracleDrive = "1.0.0"

# Testing
mockk = "1.14.5"

[libraries]
# AndroidX Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
desugar-jdk-libs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "desugar-jdk-libs" }

# Compose
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

# Navigation
navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# Lifecycle
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }

# Hilt (Dependency Injection)
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltWork" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }

# Room (Database)
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

# WorkManager (Background Tasks)
work-runtime-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workManager" }

# Firebase
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }
firebase-performance = { group = "com.google.firebase", name = "firebase-perf-ktx" }

# Kotlin Libraries
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }

# Network
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-kotlinx-serialization = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerializationConverter" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }

# Image Loading
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coilCompose" }

# Logging
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

# Material Design
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }

# OracleDrive Integration
oracle-drive-core = { group = "dev.aurakai.oracledrive", name = "oracle-core", version.ref = "oracleCore" }
oracle-drive-storage = { group = "dev.aurakai.oracledrive", name = "oracle-storage", version.ref = "oracleStorage" }
oracle-drive-ai = { group = "dev.aurakai.oracledrive", name = "oracle-ai", version.ref = "oracleDrive" }

# DataStore
datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }

# Security
security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "securityCrypto" }

# Testing
junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidxTestExtJunit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
mockk-android = { group = "io.mockk", name = "mockk-android", version.ref = "mockk" }
mockk-agent = { group = "io.mockk", name = "mockk-agent-jvm", version.ref = "mockk" }

[plugins]
# Android
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

# Kotlin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Dependency Injection
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

# Google Services
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }

# OpenAPI
openapi-generator = { id = "org.openapi.generator", version.ref = "openapiGeneratorPlugin" }

# Aura App
aurApp = { id = "dev.aurakai.auraframefx", version = "1.0" }

[bundles]
# Room
room = ["room-runtime", "room-ktx"]

# Lifecycle
lifecycle = ["lifecycle-runtime-ktx", "lifecycle-viewmodel-compose", "lifecycle-runtime-compose"]

# Compose
compose = [
    "compose-bom",
    "compose-ui",
    "compose-ui-graphics",
    "compose-ui-tooling-preview",
    "compose-material3",
    "androidx-activity-compose",
    "navigation-compose",
    "lifecycle-viewmodel-compose",
    "lifecycle-runtime-compose"
]

# Testing
test = [
    "junit-api",
    "junit-engine",
    "androidx-test-ext-junit",
    "espresso-core",
    "mockk-android",
    "mockk-agent",
    "hilt-android-testing"
]

# Network
network = [
    "retrofit",
    "retrofit-converter-kotlinx-serialization",
    "okhttp"
]
