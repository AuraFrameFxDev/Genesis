/* tslint:disable */
/* eslint-disable */
/**
 * AuraFrameFX Ecosystem API
 * A comprehensive API for interacting with the AuraFrameFX AI Super Dimensional Ecosystem. Provides access to generative AI capabilities, system customization, user management, and core application features. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@auraframefx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AgentMessage,
  AgentProcessRequest,
  AgentType,
  ErrorResponse,
} from '../models/index';
import {
    AgentMessageFromJSON,
    AgentMessageToJSON,
    AgentProcessRequestFromJSON,
    AgentProcessRequestToJSON,
    AgentTypeFromJSON,
    AgentTypeToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models/index';

export interface AgentAgentTypeProcessRequestPostRequest {
    agentType: AgentType;
    agentProcessRequest: AgentProcessRequest;
}

/**
 * AiAgentsApi - interface
 * 
 * @export
 * @interface AiAgentsApiInterface
 */
export interface AiAgentsApiInterface {
    /**
     * 
     * @summary Send a request to an AI agent
     * @param {AgentType} agentType Type of AI agent to interact with
     * @param {AgentProcessRequest} agentProcessRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AiAgentsApiInterface
     */
    agentAgentTypeProcessRequestPostRaw(requestParameters: AgentAgentTypeProcessRequestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentMessage>>;

    /**
     * Send a request to an AI agent
     */
    agentAgentTypeProcessRequestPost(requestParameters: AgentAgentTypeProcessRequestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentMessage>;

}

/**
 * 
 */
export class AiAgentsApi extends runtime.BaseAPI implements AiAgentsApiInterface {

    /**
     * Send a request to an AI agent
     */
    async agentAgentTypeProcessRequestPostRaw(requestParameters: AgentAgentTypeProcessRequestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentMessage>> {
        if (requestParameters['agentType'] == null) {
            throw new runtime.RequiredError(
                'agentType',
                'Required parameter "agentType" was null or undefined when calling agentAgentTypeProcessRequestPost().'
            );
        }

        if (requestParameters['agentProcessRequest'] == null) {
            throw new runtime.RequiredError(
                'agentProcessRequest',
                'Required parameter "agentProcessRequest" was null or undefined when calling agentAgentTypeProcessRequestPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2AuthCode", ["auraframefx.ai"]);
        }

        const response = await this.request({
            path: `/agent/{agentType}/process-request`.replace(`{${"agentType"}}`, encodeURIComponent(String(requestParameters['agentType']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AgentProcessRequestToJSON(requestParameters['agentProcessRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentMessageFromJSON(jsonValue));
    }

    /**
     * Send a request to an AI agent
     */
    async agentAgentTypeProcessRequestPost(requestParameters: AgentAgentTypeProcessRequestPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentMessage> {
        const response = await this.agentAgentTypeProcessRequestPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
