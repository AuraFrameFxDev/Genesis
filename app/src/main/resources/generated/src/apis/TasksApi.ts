/* tslint:disable */
/* eslint-disable */
/**
 * AuraFrameFX Ecosystem API
 * A comprehensive API for interacting with the AuraFrameFX AI Super Dimensional Ecosystem. Provides access to generative AI capabilities, system customization, user management, and core application features. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@auraframefx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  TaskScheduleRequest,
  TaskStatus,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    TaskScheduleRequestFromJSON,
    TaskScheduleRequestToJSON,
    TaskStatusFromJSON,
    TaskStatusToJSON,
} from '../models/index';

export interface TasksSchedulePostRequest {
    taskScheduleRequest: TaskScheduleRequest;
}

/**
 * TasksApi - interface
 * 
 * @export
 * @interface TasksApiInterface
 */
export interface TasksApiInterface {
    /**
     * 
     * @summary Schedule a new task
     * @param {TaskScheduleRequest} taskScheduleRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TasksApiInterface
     */
    tasksSchedulePostRaw(requestParameters: TasksSchedulePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskStatus>>;

    /**
     * Schedule a new task
     */
    tasksSchedulePost(requestParameters: TasksSchedulePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskStatus>;

}

/**
 * 
 */
export class TasksApi extends runtime.BaseAPI implements TasksApiInterface {

    /**
     * Schedule a new task
     */
    async tasksSchedulePostRaw(requestParameters: TasksSchedulePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskStatus>> {
        if (requestParameters['taskScheduleRequest'] == null) {
            throw new runtime.RequiredError(
                'taskScheduleRequest',
                'Required parameter "taskScheduleRequest" was null or undefined when calling tasksSchedulePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2AuthCode", ["auraframefx.ai"]);
        }

        const response = await this.request({
            path: `/tasks/schedule`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TaskScheduleRequestToJSON(requestParameters['taskScheduleRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TaskStatusFromJSON(jsonValue));
    }

    /**
     * Schedule a new task
     */
    async tasksSchedulePost(requestParameters: TasksSchedulePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskStatus> {
        const response = await this.tasksSchedulePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
