/* tslint:disable */
/* eslint-disable */
/**
 * AuraFrameFX Ecosystem API
 * A comprehensive API for interacting with the AuraFrameFX AI Super Dimensional Ecosystem. Provides access to generative AI capabilities, system customization, user management, and core application features. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@auraframefx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Theme
 */
export interface Theme {
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    primaryColor: string;
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    secondaryColor: string;
    /**
     * 
     * @type {boolean}
     * @memberof Theme
     */
    isDefault: boolean;
}

/**
 * Check if a given object implements the Theme interface.
 */
export function instanceOfTheme(value: object): value is Theme {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('primaryColor' in value) || value['primaryColor'] === undefined) return false;
    if (!('secondaryColor' in value) || value['secondaryColor'] === undefined) return false;
    if (!('isDefault' in value) || value['isDefault'] === undefined) return false;
    return true;
}

export function ThemeFromJSON(json: any): Theme {
    return ThemeFromJSONTyped(json, false);
}

export function ThemeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Theme {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'primaryColor': json['primaryColor'],
        'secondaryColor': json['secondaryColor'],
        'isDefault': json['isDefault'],
    };
}

export function ThemeToJSON(value?: Theme | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'primaryColor': value['primaryColor'],
        'secondaryColor': value['secondaryColor'],
        'isDefault': value['isDefault'],
    };
}

