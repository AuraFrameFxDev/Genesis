/* tslint:disable */
/* eslint-disable */
/**
 * AuraFrameFX Ecosystem API
 * A comprehensive API for interacting with the AuraFrameFX AI Super Dimensional Ecosystem. Provides access to generative AI capabilities, system customization, user management, and core application features. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@auraframefx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPreferences
 */
export interface UserPreferences {
    /**
     * 
     * @type {string}
     * @memberof UserPreferences
     */
    themeId?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPreferences
     */
    language?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserPreferences
     */
    notificationsEnabled?: boolean;
}

/**
 * Check if a given object implements the UserPreferences interface.
 */
export function instanceOfUserPreferences(value: object): value is UserPreferences {
    return true;
}

export function UserPreferencesFromJSON(json: any): UserPreferences {
    return UserPreferencesFromJSONTyped(json, false);
}

export function UserPreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPreferences {
    if (json == null) {
        return json;
    }
    return {
        
        'themeId': json['themeId'] == null ? undefined : json['themeId'],
        'language': json['language'] == null ? undefined : json['language'],
        'notificationsEnabled': json['notificationsEnabled'] == null ? undefined : json['notificationsEnabled'],
    };
}

export function UserPreferencesToJSON(value?: UserPreferences | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'themeId': value['themeId'],
        'language': value['language'],
        'notificationsEnabled': value['notificationsEnabled'],
    };
}

